package com.softsimphony.checadorgdf.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReporteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public ReporteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdReporteIsNull() {
            addCriterion("idReporte is null");
            return (Criteria) this;
        }

        public Criteria andIdReporteIsNotNull() {
            addCriterion("idReporte is not null");
            return (Criteria) this;
        }

        public Criteria andIdReporteEqualTo(Integer value) {
            addCriterion("idReporte =", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteNotEqualTo(Integer value) {
            addCriterion("idReporte <>", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteGreaterThan(Integer value) {
            addCriterion("idReporte >", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idReporte >=", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteLessThan(Integer value) {
            addCriterion("idReporte <", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteLessThanOrEqualTo(Integer value) {
            addCriterion("idReporte <=", value, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteIn(List<Integer> values) {
            addCriterion("idReporte in", values, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteNotIn(List<Integer> values) {
            addCriterion("idReporte not in", values, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteBetween(Integer value1, Integer value2) {
            addCriterion("idReporte between", value1, value2, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdReporteNotBetween(Integer value1, Integer value2) {
            addCriterion("idReporte not between", value1, value2, "idReporte");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioIsNull() {
            addCriterion("idUsuario is null");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioIsNotNull() {
            addCriterion("idUsuario is not null");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioEqualTo(Integer value) {
            addCriterion("idUsuario =", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioNotEqualTo(Integer value) {
            addCriterion("idUsuario <>", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioGreaterThan(Integer value) {
            addCriterion("idUsuario >", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioGreaterThanOrEqualTo(Integer value) {
            addCriterion("idUsuario >=", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioLessThan(Integer value) {
            addCriterion("idUsuario <", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioLessThanOrEqualTo(Integer value) {
            addCriterion("idUsuario <=", value, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioIn(List<Integer> values) {
            addCriterion("idUsuario in", values, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioNotIn(List<Integer> values) {
            addCriterion("idUsuario not in", values, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario between", value1, value2, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdUsuarioNotBetween(Integer value1, Integer value2) {
            addCriterion("idUsuario not between", value1, value2, "idUsuario");
            return (Criteria) this;
        }

        public Criteria andIdAreaIsNull() {
            addCriterion("idArea is null");
            return (Criteria) this;
        }

        public Criteria andIdAreaIsNotNull() {
            addCriterion("idArea is not null");
            return (Criteria) this;
        }

        public Criteria andIdAreaEqualTo(Integer value) {
            addCriterion("idArea =", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaNotEqualTo(Integer value) {
            addCriterion("idArea <>", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaGreaterThan(Integer value) {
            addCriterion("idArea >", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("idArea >=", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaLessThan(Integer value) {
            addCriterion("idArea <", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaLessThanOrEqualTo(Integer value) {
            addCriterion("idArea <=", value, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaIn(List<Integer> values) {
            addCriterion("idArea in", values, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaNotIn(List<Integer> values) {
            addCriterion("idArea not in", values, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaBetween(Integer value1, Integer value2) {
            addCriterion("idArea between", value1, value2, "idArea");
            return (Criteria) this;
        }

        public Criteria andIdAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("idArea not between", value1, value2, "idArea");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIsNull() {
            addCriterion("horaRegistro is null");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIsNotNull() {
            addCriterion("horaRegistro is not null");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroEqualTo(Date value) {
            addCriterionForJDBCDate("horaRegistro =", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotEqualTo(Date value) {
            addCriterionForJDBCDate("horaRegistro <>", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroGreaterThan(Date value) {
            addCriterionForJDBCDate("horaRegistro >", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("horaRegistro >=", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroLessThan(Date value) {
            addCriterionForJDBCDate("horaRegistro <", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("horaRegistro <=", value, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroIn(List<Date> values) {
            addCriterionForJDBCDate("horaRegistro in", values, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotIn(List<Date> values) {
            addCriterionForJDBCDate("horaRegistro not in", values, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("horaRegistro between", value1, value2, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraRegistroNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("horaRegistro not between", value1, value2, "horaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNull() {
            addCriterion("fechaRegistro is null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIsNotNull() {
            addCriterion("fechaRegistro is not null");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroEqualTo(Date value) {
            addCriterionForJDBCDate("fechaRegistro =", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotEqualTo(Date value) {
            addCriterionForJDBCDate("fechaRegistro <>", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThan(Date value) {
            addCriterionForJDBCDate("fechaRegistro >", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fechaRegistro >=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThan(Date value) {
            addCriterionForJDBCDate("fechaRegistro <", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fechaRegistro <=", value, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroIn(List<Date> values) {
            addCriterionForJDBCDate("fechaRegistro in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotIn(List<Date> values) {
            addCriterionForJDBCDate("fechaRegistro not in", values, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fechaRegistro between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andFechaRegistroNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fechaRegistro not between", value1, value2, "fechaRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroIsNull() {
            addCriterion("idTipoRegistro is null");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroIsNotNull() {
            addCriterion("idTipoRegistro is not null");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroEqualTo(Integer value) {
            addCriterion("idTipoRegistro =", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroNotEqualTo(Integer value) {
            addCriterion("idTipoRegistro <>", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroGreaterThan(Integer value) {
            addCriterion("idTipoRegistro >", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroGreaterThanOrEqualTo(Integer value) {
            addCriterion("idTipoRegistro >=", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroLessThan(Integer value) {
            addCriterion("idTipoRegistro <", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroLessThanOrEqualTo(Integer value) {
            addCriterion("idTipoRegistro <=", value, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroIn(List<Integer> values) {
            addCriterion("idTipoRegistro in", values, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroNotIn(List<Integer> values) {
            addCriterion("idTipoRegistro not in", values, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroBetween(Integer value1, Integer value2) {
            addCriterion("idTipoRegistro between", value1, value2, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andIdTipoRegistroNotBetween(Integer value1, Integer value2) {
            addCriterion("idTipoRegistro not between", value1, value2, "idTipoRegistro");
            return (Criteria) this;
        }

        public Criteria andHoraIdealIsNull() {
            addCriterion("horaIdeal is null");
            return (Criteria) this;
        }

        public Criteria andHoraIdealIsNotNull() {
            addCriterion("horaIdeal is not null");
            return (Criteria) this;
        }

        public Criteria andHoraIdealEqualTo(Date value) {
            addCriterionForJDBCDate("horaIdeal =", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealNotEqualTo(Date value) {
            addCriterionForJDBCDate("horaIdeal <>", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealGreaterThan(Date value) {
            addCriterionForJDBCDate("horaIdeal >", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("horaIdeal >=", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealLessThan(Date value) {
            addCriterionForJDBCDate("horaIdeal <", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("horaIdeal <=", value, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealIn(List<Date> values) {
            addCriterionForJDBCDate("horaIdeal in", values, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealNotIn(List<Date> values) {
            addCriterionForJDBCDate("horaIdeal not in", values, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("horaIdeal between", value1, value2, "horaIdeal");
            return (Criteria) this;
        }

        public Criteria andHoraIdealNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("horaIdeal not between", value1, value2, "horaIdeal");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporte
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 17 15:45:02 CDT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reporte
     *
     * @mbggenerated Wed Aug 17 15:45:02 CDT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}